const nj = require("numjs");

const hiddenIndexes = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
  24, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 85, 86, 87, 88, 97,
  98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 121, 122,
  123, 124, 462, 463, 587, 617, 1213, 1223, 1225, 2329, 2330, 2331, 2332,
  2333, 2334, 2942, 2985, 2994, 3243, 3244, 3266, 3433, 3449, 3450, 3457,
  3458, 3459, 3495, 3496, 3497, 3560, 3561, 3562, 3563, 3564, 3570, 3571,
  3572, 3573, 3864, 3865, 3912, 3913, 3923, 3924, 3939, 3944, 3945, 3946,
  3947, 3948, 3949, 4069, 4070, 4084, 4192, 4217, 4643, 4651, 4656, 4657,
  4668, 4703, 4815, 4816, 4817, 5008, 5010, 5032, 5033, 5034, 5035, 5036,
  5037, 5137, 5138, 5183, 5255, 5288, 5289, 5291, 5296, 5297, 5298, 5323,
  6052, 6281, 6282, 6283, 6284, 6301, 6341, 6342, 6352, 6353, 6943, 6944,
  6945, 6946, 6947, 7360, 7545, 7733, 7737, 7739, 7784, 7880, 7882, 7883,
  8446, 8455, 8507, 9217, 9850, 10162, 10493, 10494, 10495, 10661, 10700,
  10719, 10975, 10976, 10981, 11060, 11079, 11085, 11113, 11116, 11214, 11215,
  11216, 11270, 11271, 10246, 6174, 8228, 6210, 6211, 6212, 6213, 6218, 8268,
  8269, 10360, 6265, 10361, 10362, 10363, 10369, 2187, 6285, 6286, 146, 147, 148,
  4255, 4256, 4257, 4258, 4259, 4260, 4261, 10437, 10438, 10439, 6354, 4309, 4310,
  4311, 4312, 4313, 4314, 4315, 4316, 10453, 10454, 10455, 10510, 10511, 10512, 10524,
  10525, 10526, 10527, 10528, 10529, 2354, 8522, 331, 8523, 2385, 2386, 8537, 2393, 2394,
  2395, 2396, 2397, 2401, 2402, 2403, 356, 357, 358, 2404, 2405, 2406, 2407, 2408,
  2409, 2410, 2411, 10605, 10606, 10611, 10618, 9852, 9853, 424, 425, 436, 437, 438,
  439, 440, 8630, 8637, 8638, 446, 447, 448, 449, 450, 451, 452, 453, 454, 8639,
  6607, 6652, 2559, 8715, 8716, 8717, 8718, 8719, 8731, 10794, 10795, 10796, 10797,
  10798, 10799, 568, 10835, 6740, 6741, 2648, 8792, 8793, 8794, 8795, 8796, 6763,
  10865, 10866, 631, 10872, 10873, 4732, 4733, 2689, 2690, 2691, 2692, 10883, 10884,
  4743, 10885, 10886, 10887, 2701, 2702, 6799, 10895, 10896, 10897, 10898, 10899,
  10900, 10901, 10903, 10904, 10902, 6810, 8859, 8862, 10912, 10913, 8868, 8869,
  8878, 6832, 6833, 4787, 4788, 10931, 10932, 8890, 6843, 8891, 8892, 8894, 8895,
  8900, 8901, 2758, 8906, 8907, 2764, 8908, 8909, 8910, 8911, 8912, 8913, 8914,
  8932, 6908, 6909, 6910, 6911, 6912, 780, 781, 2852, 2853, 8999, 2856, 2857, 2859,
  2860, 2861, 2862, 2863, 11057, 9051, 9052, 9053, 9054, 9055, 9056, 9057, 9059, 9079,
  7063, 939, 7096, 5058, 5059, 964, 5060, 5061, 971, 972, 977, 978, 979, 980, 990,
  991, 992, 996, 7141, 7142, 1004, 1018, 1019, 1020, 1021, 3078, 3079, 3080, 9254,
  9255, 9275, 3161, 9330, 1145, 1146, 1147, 1148, 5251, 9393, 9394, 9395, 9396, 9419,
  9420, 9421, 5324, 9425, 9461, 9462, 9463, 7430, 5399, 5400, 1343, 1344, 1345, 1346,
  1347, 1348, 9552, 9564, 9565, 1375, 3434, 3435, 9579, 1391, 9585, 9586, 9587, 9588,
  9589, 9590, 9591, 9592, 9593, 9594, 9595, 9596, 1401, 1402, 1403, 1404, 1405, 3451,
  9597, 9599, 3469, 3470, 9623, 3494, 3499, 7601, 3506, 5563, 3574, 5654, 1560, 1561,
  1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 3656, 3657, 3658, 3659, 3660,
  3663, 1620, 7769, 7770, 7771, 3685, 3686, 3697, 3698, 1657, 1658, 9851, 1659, 1660,
  1661, 1662, 9856, 1663, 1664, 1665, 1666, 1667, 7812, 9854, 9855, 3721, 9857, 9858,
  9859, 9860, 9861, 9862, 9863, 9864, 9865, 9869, 9870, 9871, 9876, 9877, 9878, 9879,
  9880, 9881, 9882, 9883, 9884, 9885, 9886, 9887, 9888, 9889, 9890, 9891, 9892, 9893,
  9894, 9895, 9896, 9897, 9898, 9899, 9900, 9901, 9902, 9903, 5810, 9904, 9905, 9906,
  9907, 5840, 5841, 9936, 9937, 3796, 9938, 9941, 9942, 9943, 7925, 7978, 7996, 7997,
  7998, 1893, 1897, 10097, 1919, 1927, 1928, 1929, 1930, 1931, 10121, 10133, 10134,
  10135, 10142, 10143, 10144, 10147, 10150, 10151, 10169, 10170, 2005, 2019, 8173,
  8174, 2042, 6209, 5698, 7778, 7687, 10924, 4653, 2190, 7502, 2771, 3191, 3928, 5790, 392,
  393, 394, 395, 396, 400, 411, 412, 413, 414, 415, 416, 421, 422, 423, 705, 706, 707, 708, 709, 710,
  711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
  732, 733, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
  760, 761, 762, 763, 764, 765, 766, 767, 768, 2313, 2314, 9248, 9249, 9250, 9251, 9252, 9253, 9258, 9259,
  9260, 9261, 9262, 9263, 9264, 9265, 9266, 9267, 9268, 9273, 9274, 9280, 9281, 9282, 9283, 9284, 9285, 9286, 9287,
  9288, 9289, 9290, 9291, 9292, 9293, 9294, 10554, 11272, 11273, 11274, 11275, 11276,
  11277, 11278, 11279, 11280, 11281, 11282, 11283, 11284, 11285, 11286, 11287, 11288, 11289, 11290, 11291, 11292];

const hexToRgb = (hex) => {
  // with the help of https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb
  const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  return result ? {
    r: parseInt(result[1], 16),
    g: parseInt(result[2], 16),
    b: parseInt(result[3], 16),
  } : null;
};

const maxMoment = 47;

const preprocessNpy = (matrix) => {
  const {shape, data} = matrix;
  return nj.array(Object.values(data)).reshape(shape);
};

const momentToMs = (moment) => {
  return `${((moment/47) * 1500 - 500).toFixed(2)}ms`;
};

export {hiddenIndexes, hexToRgb, maxMoment, preprocessNpy, momentToMs};
